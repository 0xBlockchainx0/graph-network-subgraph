specVersion: 0.0.1
description: The Graph Network Smart Contracts on Ethereum
repository: https://github.com/graphprotocol/contracts/subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: GNS
    network: ganache # ropsten or ganache
    source:
      # Remember, this MUST be updated with changes to accounts on ganache.
      # everyone can get the same GNS address By running `ganache-cli -d`.
      # Then run `truffle test` and GNS will be the addr 0x0290fb167208af455bb137780163b7b7a9a10c16
      # Or right now (aug 8th) ropsten is 0x77E8997a50aeD85b5d087a6B291878a172f68fA3
      address: '0x0290fb167208af455bb137780163b7b7a9a10c16'
      abi: GNS
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Account
        - Subgraph
        - SubgraphVersion
      abis:
        - name: GNS
          file: ./abis/GNS.json
      eventHandlers:
        - event: DomainAdded(indexed bytes32,indexed address,string)
          handler: handleDomainAdded
        - event: DomainTransferred(indexed bytes32,indexed address)
          handler: handleDomainTransferred
        - event: DomainDeleted(indexed bytes32)
          handler: handleDomainDeleted
        - event: SubgraphCreated(indexed bytes32,indexed bytes32,string)
          handler: handleSubgraphCreated
        - event: SubgraphIDUpdated(indexed bytes32,indexed bytes32)
          handler: handleSubgraphIDUpdated
        - event: AccountMetadataChanged(indexed address,indexed bytes32)
          handler: handleAccountMetadataChanged
        - event: SubgraphMetadataChanged(indexed bytes32,indexed bytes32)
          handler: handleSubgraphMetadataChanged
      file: ./src/mappings/gns.ts
  - kind: ethereum/contract
    name: ServiceRegistry
    network: ganache
    source:
      address: "0x0290fb167208af455bb137780163b7b7a9a10c16" # ropsten - 0xC0F3ddB5732Dec002eBB92cBc04B24ac274dE71F # ganache - 0x0290fb167208af455bb137780163b7b7a9a10c16
      abi: ServiceRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Indexer
      abis:
        - name: ServiceRegistry
          file: ./abis/ServiceRegistry.json
      eventHandlers:
        - event: ServiceUrlSet(indexed address,bytes)
          handler: handleServiceUrlSet
      file: ./src/mappings/service-registry.ts
  - kind: ethereum/contract
    name: Staking
    network: ganache
    source:
      address: "0x9b1f7F645351AF3631a656421eD2e40f2802E6c0" # ropsten: 0xa887a968BDb0e42D3Ffc2d6ff253568c6d2CaF34 # ganache: 0x9b1f7F645351AF3631a656421eD2e40f2802E6c0
      abi: Staking
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - CuratorInfo
        - Curator
        - IndexerInfo
        - Indexer
        - Subgraph
        - SubgraphVersion
      abis:
        - name: Staking
          file: ./abis/Staking.json
      eventHandlers:
        - event: CuratorStaked(indexed address,uint256,bytes32,uint256,uint256,uint256)
          handler: handleCurationNodeStaked
        - event: CuratorLogout(indexed address,bytes32,uint256,uint256)
          handler: handleCurationNodeLogout
        - event: IndexingNodeStaked(indexed address,uint256,bytes32,uint256)
          handler: handleIndexingNodeStaked
        - event: IndexingNodeBeginLogout(indexed address,bytes32)
          handler: handleIndexingNodeBeginLogout
        - event: IndexingNodeFinalizeLogout(indexed address,bytes32,uint256)
          handler: handleIndexingNodeFinalizeLogout
        - event: DisputeCreated(indexed bytes32,indexed address,indexed address,bytes32,bytes)
          handler: handleDisputeCreated
        - event: DisputeAccepted(indexed bytes32,indexed bytes32,indexed address,uint256)
          handler: handleDisputeAccepted
        - event: DisputeRejected(indexed bytes32,indexed bytes32,indexed address,uint256)
          handler: handleDisputeRejected
      file: ./src/mappings/staking.ts
#  - kind: ethereum/contract
#    name: GraphToken
#    network: ganache
#    source:
#      address: "0x1b2fd7988f44c53844fc0f8da21cafa21bbb571a" # note, fake for now
#      abi: GraphToken
#    mapping:
#      kind: ethereum/events
#      apiVersion: 0.0.3
#      language: wasm/assemblyscript
#      entities:
#        - Account
#        - GraphToken
#      abis:
#        - name: GraphToken
#          file: ./abis/GraphToken.json
#      eventHandlers:
#        - event: Transfer(address,address,uint256)
#          handler: handleTransfer
#        - event: Approval(address,address,uint256)
#          handler: handleApproval
#      file: ./src/mappings/graphtoken.ts